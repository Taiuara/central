#!/bin/bash
# üöÄ Script de Deploy Automatizado - Central do Provedor

echo "üöÄ CENTRAL DO PROVEDOR - DEPLOY VERCEL"
echo "========================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Verificar se est√° na branch main
current_branch=$(git branch --show-current)
if [ "$current_branch" != "main" ]; then
    echo -e "${RED}‚ùå Voc√™ deve estar na branch 'main' para fazer deploy${NC}"
    echo "   Branch atual: $current_branch"
    exit 1
fi

echo -e "${BLUE}üìã CHECKLIST PR√â-DEPLOY${NC}"
echo "========================="
echo ""

# 1. Verificar depend√™ncias
echo -e "${YELLOW}üîç Verificando depend√™ncias...${NC}"
if ! command -v npm &> /dev/null; then
    echo -e "${RED}‚ùå npm n√£o encontrado${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ npm encontrado${NC}"

# 2. Verificar se h√° mudan√ßas n√£o commitadas
if [ -n "$(git status --porcelain)" ]; then
    echo -e "${YELLOW}üìù H√° mudan√ßas n√£o commitadas. Fazendo commit...${NC}"
    echo ""
    echo "Mudan√ßas detectadas:"
    git status --short
    echo ""
    read -p "Deseja fazer commit das mudan√ßas? (s/N): " commit_changes
    if [[ $commit_changes =~ ^[Ss]$ ]]; then
        read -p "Digite a mensagem do commit: " commit_message
        git add .
        git commit -m "$commit_message"
        echo -e "${GREEN}‚úÖ Commit realizado${NC}"
    else
        echo -e "${RED}‚ùå Deploy cancelado - fa√ßa commit das mudan√ßas primeiro${NC}"
        exit 1
    fi
else
    echo -e "${GREEN}‚úÖ Nenhuma mudan√ßa pendente${NC}"
fi

# 3. Executar testes de build
echo -e "${YELLOW}üî® Testando build local...${NC}"
if npm run build > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Build local bem-sucedido${NC}"
else
    echo -e "${RED}‚ùå Erro no build local${NC}"
    echo "Execute 'npm run build' para ver os detalhes do erro"
    exit 1
fi

# 4. Verificar lint
echo -e "${YELLOW}üîç Verificando c√≥digo (lint)...${NC}"
if npm run lint > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Lint passou${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Avisos de lint encontrados (continuando...)${NC}"
fi

# 5. Push para GitHub
echo -e "${YELLOW}üì§ Enviando para GitHub...${NC}"
git push origin main
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Push para GitHub realizado${NC}"
else
    echo -e "${RED}‚ùå Erro no push para GitHub${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üéâ DEPLOY INICIADO COM SUCESSO!${NC}"
echo "==============================="
echo ""
echo -e "${BLUE}üìã PR√ìXIMOS PASSOS:${NC}"
echo ""
echo "1. üåê Acesse: https://vercel.com"
echo "2. üîó Conecte o reposit√≥rio: Taiuara/central"
echo "3. ‚öôÔ∏è  Configure as vari√°veis de ambiente:"
echo ""
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyD8RqsjXByWhRYgRgGEJE19iXpk0J68tgc${NC}"
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=central-provedor-35ef4.firebaseapp.com${NC}"
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_PROJECT_ID=central-provedor-35ef4${NC}"
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=central-provedor-35ef4.firebasestorage.app${NC}"
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=242631943904${NC}"
echo -e "${YELLOW}   NEXT_PUBLIC_FIREBASE_APP_ID=1:242631943904:web:e14e01cac0e1ec83401285${NC}"
echo -e "${YELLOW}   NODE_ENV=production${NC}"
echo ""
echo "4. üöÄ Clique em 'Deploy'"
echo "5. ‚è≥ Aguarde 2-3 minutos"
echo "6. ‚úÖ Acesse sua aplica√ß√£o em: https://central-xxx.vercel.app"
echo ""
echo -e "${BLUE}üîê CREDENCIAIS PADR√ÉO:${NC}"
echo "   Email: admin@pingdesk.com.br"
echo "   Senha: admin123"
echo ""
echo -e "${GREEN}üéØ FUNCIONALIDADES PRONTAS:${NC}"
echo "   ‚úÖ Sistema de franquia Bkup (200 N1+N2)"
echo "   ‚úÖ Autentica√ß√£o Firebase"
echo "   ‚úÖ Dashboard com m√©tricas"
echo "   ‚úÖ Gest√£o de tickets, usu√°rios e provedores"
echo "   ‚úÖ Relat√≥rios e exporta√ß√£o Excel"
echo "   ‚úÖ Per√≠odos fixos e mensais"
echo ""
echo -e "${BLUE}üìö DOCUMENTA√á√ÉO:${NC}"
echo "   üìñ DEPLOY.md - Guia completo de deploy"
echo "   üìñ FRANCHISE-RULES.md - Regras da franquia"
echo "   üìñ IMPLEMENTATION-SUMMARY.md - Resumo das altera√ß√µes"
echo ""
echo -e "${GREEN}üéâ SUCESSO! Reposit√≥rio atualizado e pronto para deploy no Vercel!${NC}"
